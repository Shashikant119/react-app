{"ast":null,"code":"var _jsxFileName = \"/var/www/my-react/src/MyComponents/Contact.js\";\nimport React from 'react';\nimport Contact from './Contact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst About = () => {\n  class Contact extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        items: []\n      };\n    }\n\n    componentDidMount() {\n      fetch(\"http://dummy.restapiexample.com/api/v1/employees\").then(res => res.json()).then(result => {\n        this.setState({\n          isLoaded: true,\n          items: result.items\n        });\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    }\n\n    render() {\n      const {\n        error,\n        isLoaded,\n        items\n      } = this.state;\n\n      if (error) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Error: \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }, this);\n      } else if (!isLoaded) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.name, \" \", item.price]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n  }\n};\n\n_c = About;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["/var/www/my-react/src/MyComponents/Contact.js"],"names":["React","Contact","About","Component","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","render","message","map","item","name","price","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AACpB,QAAMD,OAAN,SAAsBD,KAAK,CAACG,SAA5B,CAAsC;AAClCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;AACA,WAAKC,KAAL,GAAa;AACXC,QAAAA,KAAK,EAAE,IADI;AAEXC,QAAAA,QAAQ,EAAE,KAFC;AAGXC,QAAAA,KAAK,EAAE;AAHI,OAAb;AAKD;;AAEDC,IAAAA,iBAAiB,GAAG;AAClBC,MAAAA,KAAK,CAAC,kDAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,aAAKC,QAAL,CAAc;AACZR,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,KAAK,EAAEM,MAAM,CAACN;AAFF,SAAd;AAID,OARL,EAUKF,KAAD,IAAW;AACT,aAAKS,QAAL,CAAc;AACZR,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA;AAFY,SAAd;AAID,OAfL;AAiBD;;AAEDU,IAAAA,MAAM,GAAG;AACP,YAAM;AAAEV,QAAAA,KAAF;AAASC,QAAAA,QAAT;AAAmBC,QAAAA;AAAnB,UAA6B,KAAKH,KAAxC;;AACA,UAAIC,KAAJ,EAAW;AACT,4BAAO;AAAA,gCAAaA,KAAK,CAACW,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO,IAAI,CAACV,QAAL,EAAe;AACpB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFM,MAEA;AACL,4BACE;AAAA,oBACGC,KAAK,CAACU,GAAN,CAAUC,IAAI,iBACb;AAAA,uBACGA,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,KADpB;AAAA,aAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AASD;AACF;;AA/CiC;AAiDnC,CAlDH;;KAAMrB,K;AAoDJ,eAAeD,OAAf","sourcesContent":["import React from 'react'\nimport Contact from './Contact';\n\nconst About = () => {\nclass Contact extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        items: []\n      };\n    }\n  \n    componentDidMount() {\n      fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              isLoaded: true,\n              items: result.items\n            });\n          },\n        \n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )\n    }\n  \n    render() {\n      const { error, isLoaded, items } = this.state;\n      if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <ul>\n            {items.map(item => (\n              <li key={item.id}>\n                {item.name} {item.price}\n              </li>\n            ))}\n          </ul>\n        );\n      }\n    }\n  }\n  }\n\n  export default Contact\n"]},"metadata":{},"sourceType":"module"}