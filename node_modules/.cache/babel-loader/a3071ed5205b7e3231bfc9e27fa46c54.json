{"ast":null,"code":"var _jsxFileName = \"/var/www/my-react/src/MyComponents/Contact.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      students: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://dummy.restapiexample.com/api/v1/employees\").then(result => {\n      this.setState({\n        isLoaded: true,\n        students: result.items\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      students\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: students.map(students => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.id, \" \", item.employee_name]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/var/www/my-react/src/MyComponents/Contact.js"],"names":["React","Contact","Component","constructor","props","state","error","isLoaded","students","componentDidMount","fetch","then","result","setState","items","render","message","map","item","id","employee_name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,kDAAD,CAAL,CACGC,IADH,CACSC,MAAD,IAAY;AACd,WAAKC,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAFL,OAAd;AAID,KANL,EAQKR,KAAD,IAAW;AACT,WAAKO,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAbL;AAeD;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAAgC,KAAKH,KAA3C;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA,8BAAaA,KAAK,CAACU,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACA;AAAA,oBACGC,QAAQ,CAACS,GAAT,CAAaT,QAAQ,iBACpB;AAAA,uBACGU,IAAI,CAACC,EADR,OACaD,IAAI,CAACE,aADlB;AAAA,aAASF,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD;AACF;;AA/CgD","sourcesContent":["import React from 'react'\n\nexport default class Contact extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        students: []\n      };\n    }\n  \n    componentDidMount() {\n      fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n        .then((result) => {\n            this.setState({\n              isLoaded: true,\n              students: result.items\n            });\n          },\n         \n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )\n    }\n  \n    render() {\n      const { error, isLoaded, students } = this.state;\n      if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <div className='container'> \n          <ul>               \n            {students.map(students => (\n              <li key={item.id}>\n                {item.id} {item.employee_name}\n              </li>\n            ))}\n          </ul>\n          </div>\n        );\n      }\n    }\n  }"]},"metadata":{},"sourceType":"module"}